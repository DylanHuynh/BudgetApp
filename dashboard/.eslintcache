[{"C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\index.js":"1","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\App.js":"3","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\ProgressBar.js":"4","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Backend.js":"5","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Chart.js":"6","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Calendar.js":"7","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\store.js":"8","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\CalendarItem.js":"9"},{"size":517,"mtime":1609272991752,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1609272991753,"results":"12","hashOfConfig":"11"},{"size":9266,"mtime":1609804020430,"results":"13","hashOfConfig":"11"},{"size":731,"mtime":1609272991748,"results":"14","hashOfConfig":"11"},{"size":1665,"mtime":1609803819095,"results":"15","hashOfConfig":"11"},{"size":3730,"mtime":1609728465763,"results":"16","hashOfConfig":"11"},{"size":6180,"mtime":1609731821276,"results":"17","hashOfConfig":"11"},{"size":1117,"mtime":1609728465764,"results":"18","hashOfConfig":"11"},{"size":921,"mtime":1609728465762,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vjhhr8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\index.js",[],["46","47"],"C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\App.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState, Component } from 'react';\r\nimport { DayPilot, DayPilotCalendar } from \"daypilot-pro-react\";\r\nimport ProgressBar from './ProgressBar.js';\r\nimport Calendar from './Calendar.js';\r\nimport {LineChart,BarChart} from './Chart.js';\r\n\r\nimport './Figma.css';\r\nimport { requirePropFactory } from '@material-ui/core';\r\nimport { user1, Purchase, Account } from './store.js';\r\nimport { startOfWeek, format, addDays, getTime, parseJSON } from 'date-fns'\r\nimport { loadUser, updateUser, addPurchase, deletePurchase, updatePurchase } from './Backend.js'\r\nrequire('typeface-roboto');\r\n\r\n\r\n//going to previous and next = add/subtract 7 days\r\n//add currentFirstDay which use to determine what to render in that week\r\n//only class should be purchase, day should be converted into a Date object\r\n//checkboxes for each repetition day so attribute is an array not a string\r\n//getDay returns 0-6 corresponding to M-S\r\n//isEqual() compares date objects\r\n\r\n\r\n// let formattedFirstDay = format(firstDay,' EEEEEE M/d');\r\n// console.log(formattedFirstDay);\r\nconst findPurchaseTotal = (account, startOfWeek) => {\r\n  let sum = 0;\r\n  for (const purchase of account.purchases) {\r\n    if (purchase.repetition.length > 0) {\r\n      sum += purchase.repetition.length * purchase.price;\r\n    }\r\n    else if (getTime(purchase.day) >= getTime(startOfWeek) && getTime(purchase.day) < getTime(addDays(startOfWeek, 7)))\r\n      sum += purchase.price;\r\n\r\n  }\r\n  return sum;\r\n}\r\n\r\nconst findPriceDistribution = (account, startOfWeek) => {\r\n  let prices = {};\r\n  let pricesArr = [];\r\n  for (const purchase of account.purchases) {\r\n    if (purchase.repetition.length > 0) {\r\n      if (purchase.category in prices) {\r\n        prices[purchase.category] += purchase.price*purchase.repetition.length;\r\n\r\n      }\r\n      else {\r\n        prices[purchase.category] = purchase.price*purchase.repetition.length;\r\n\r\n      }\r\n    }\r\n    else if (getTime(purchase.day) >= getTime(startOfWeek) && getTime(purchase.day) < getTime(addDays(startOfWeek, 7))){\r\n      console.log(purchase.name)\r\n      if (purchase.category in prices) {\r\n        prices[purchase.category] += purchase.price;\r\n      }\r\n      else {\r\n        prices[purchase.category] = purchase.price;\r\n\r\n      }\r\n    }\r\n\r\n    console.log(account)\r\n\r\n  }\r\n  for (const key in Object.keys(prices)) {\r\n    pricesArr.push(prices[Object.keys(prices)[key]])\r\n  }\r\n  return [pricesArr,Object.keys(prices)];\r\n}\r\n\r\nconst generateDailyCosts = (account, startOfWeek) => {\r\n  let cumulativeCost = 0;\r\n  let budget = account.weeklyBudget;\r\n  let days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\r\n  let dailyCosts = [budget, budget, budget, budget, budget, budget, budget];\r\n  for (let i = 0; i < 7; i++) {\r\n    for (const purchase of account.purchases) {\r\n      if (purchase.repetition.includes(days[i])) {\r\n        cumulativeCost += purchase.price;\r\n      }\r\n      else if (format(purchase.day, 'EEEEEE') === days[i] && (getTime(purchase.day) >= getTime(startOfWeek) && getTime(purchase.day) < getTime(addDays(startOfWeek, 7)))) {\r\n        cumulativeCost += purchase.price;\r\n      }\r\n\r\n    }\r\n    dailyCosts[i] -= cumulativeCost;\r\n  }\r\n  return dailyCosts\r\n}\r\n\r\nconst statusMessage = (account, budget, categoryPrices, startOfWeek) => {\r\n  if (findPurchaseTotal(account, startOfWeek) <= budget) {\r\n    return [\"On Track!\", \"Keep it up!\"]\r\n  }\r\n  else {\r\n    let maxCategory = \"\";\r\n    let maxPrice = 0;\r\n    for (const key in categoryPrices) {\r\n      if (categoryPrices[key] > maxPrice) {\r\n        maxCategory = key;\r\n        maxPrice = categoryPrices[key]\r\n      }\r\n    }\r\n    if (maxCategory === \"\") {\r\n      return [\"No purchases made yet\", \"N/A\"];\r\n    }\r\n    return [\"Warning\", \" Consider reducing spending in \" + maxCategory];\r\n  }\r\n}\r\n\r\nconst parseRepetitions = (repetition, purchase) => {\r\n  let dates = [];\r\n  if (repetition === \"no\") {\r\n    return repetition;\r\n  }\r\n  let startIndex = 0;\r\n  for (let i = 0; i < repetition.length; i++) {\r\n    if (repetition.substring(i, i + 1) === \"/\") {\r\n      dates.push(repetition.substring(startIndex, i));\r\n      startIndex = i + 1;\r\n    }\r\n  }\r\n  dates.push(repetition.substring(repetition.length - 1, repetition.length));\r\n  return dates;\r\n}\r\n\r\nconst processRepetitions = (account) => {\r\n  for (const purchase in account.purchases) {\r\n    if (purchase.reptitions.length > 0) {\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// edit these values after filling in the forms in the Add Purchase page.\r\nlet name = \"Chipotle\";\r\nlet price = 11;\r\nlet category = \"Food\";\r\nlet date = \"2020-12-30\";\r\nlet repetition = \"No\";\r\nlet examplePurchase = {name: `${name}`, price: `${price}`, category: `${category}`, date: `${date}`, repetition: `${repetition}`};\r\n\r\n\r\nfunction App() {\r\n  // let convertedWeek = processRepetitions(thisWeek);\r\n  const [account,setAccount] = useState(user1);\r\n\r\n  const [firstDay, setDate] = useState(startOfWeek(new Date()));\r\n  const alterDate = (count) => {\r\n    setDate(addDays(firstDay, count));\r\n    console.log(addDays(firstDay, count))\r\n  }\r\n\r\n  const visualizationDict = {\r\n    one: <LineChart dailyCosts={generateDailyCosts(account, firstDay)} />,\r\n    two: <BarChart dailyCosts={findPriceDistribution(account,firstDay)[0]} categoryLabels={findPriceDistribution(account,firstDay)[1]} />\r\n  }\r\n  const vals = findPriceDistribution(user1, firstDay);\r\n  const [visualization,setVisualization] = useState([\"one\",\"two\"])\r\n  //create a copy, splice copy,set original visualization to copy\r\n  //find computer ip address, disable firewall for that port (verify 3306 is right and open)\r\n  const toggleVisualization = () => {\r\n    debugger;\r\n\r\n    const firstElem = visualization[0]\r\n    visualization.splice(0,1);\r\n    console.log(visualization);\r\n    const megaClone = visualization.concat([firstElem]);\r\n    console.log(megaClone);\r\n    console.log( Object.assign(megaClone));\r\n    setVisualization( Object.assign(megaClone));\r\n\r\n  }\r\n\r\n  const alterBudget = (account) => {\r\n    if (document.getElementById(\"alter-budget-input\") !== null) {\r\n      console.log(document.getElementById(\"alter-budget-input\").value);\r\n      account.weeklyBudget = document.getElementById(\"alter-budget-input\").value;\r\n      handleChange(account);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  const handleChange = (newAccount) => {\r\n    const accountCopy = Object.assign(Object.create(Object.getPrototypeOf(newAccount)), newAccount);\r\n    debugger;\r\n\r\n    setAccount(accountCopy);\r\n  }\r\n  return (\r\n\r\n    <div className=\"App\">\r\n\r\n      <div id=\"frame\"><span id=\"dashboard-title\">My Dashboard</span>\r\n        <div id=\"next-box\"></div>\r\n        <span onClick={() => alterDate(-7)} id=\"previous\">Previous</span>\r\n        <div id=\"previous-box\"></div>\r\n        <span onClick={() => alterDate(7)} id=\"next\">Next</span>\r\n\r\n        <Calendar onChange ={handleChange} startDate={firstDay} account={account}/>\r\n        {/* TODO: grid layout from MDN guide for columns */}\r\n\r\n\r\n        <div id=\"report-header-box\"></div>\r\n        <div id=\"visualization-header-box\"></div>\r\n        <span id=\"report-header\">Status Report: {statusMessage(account, account.weeklyBudget, vals, firstDay)[0]}</span>\r\n        <span onClick={() => toggleVisualization()} id=\"visualization-header\">Toggle Visualizations</span>\r\n        <div id=\"report\"></div>\r\n        <div id=\"visualization\">\r\n          {visualizationDict[visualization[0]]}\r\n        </div>\r\n        <ProgressBar percentage={(findPurchaseTotal(account, firstDay) / account.weeklyBudget * 100)>99 ? 100 : (findPurchaseTotal(account, firstDay) / account.weeklyBudget * 100)} />\r\n\r\n\r\n\r\n        <span id=\"e2_91\">You’re currently projected to spend {Math.round(findPurchaseTotal(account, firstDay) / account.weeklyBudget * 100)}% of your weekly budget</span>\r\n        <span id=\"recommendation\">Recommendation: {statusMessage(account, account.weeklyBudget, vals, firstDay)[1]}\r\n        </span>\r\n        <button id=\"add-purchase\" onClick={() => updatePurchase(1, \"Mo,Tu\")}> Add Purchase</button>\r\n        <button id=\"sign-out\" onClick={() => updateUser()}> Sign Out</button>\r\n        \r\n        <input id =\"alter-budget-input\" type=\"text\" name=\"budget\" />\r\n          <button id=\"alter-budget\"   onClick={() => alterBudget(account)}>Alter Budget</button>\r\n\r\n\r\n        {/* <div id=\"categories\"></div>\r\n        <span id=\"e2_94\">\r\n          Category Breakdown:\r\n      </span>\r\n\r\n        <div class=\"wrapper\">\r\n          <div class=\"status-report\">\r\n            <h2>Status Report:</h2>\r\n            <h3>You've Spent ${findPurchaseTotal(user1, firstDay)} Dollars</h3>\r\n\r\n            <h4>You're projected to spend {findPurchaseTotal(user1, firstDay) / user1.weeklyBudget * 100}% of your weekly budget</h4>\r\n            <h5>Status: {statusMessage(user1, user1.weeklyBudget, vals, firstDay)}</h5>\r\n            <div>\r\n              {\r\n                Object.keys(vals).map((key, index) => (\r\n                  <p key={index}>  {key} : ${vals[key]}</p>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n          <div class=\"visualizations\">\r\n            Visualizations\r\n          <LineChart dailyCosts={generateDailyCosts(user1, firstDay)} />\r\n\r\n          </div> */}\r\n\r\n        {/* </div> */}\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\ProgressBar.js",[],"C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Backend.js",["62","63"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { user1, Purchase, Account } from './store.js';\r\nimport { parseJSON } from 'date-fns';\r\n\r\n\r\nconst url = 'http://localhost:5000/purchases';\r\n\r\n// gets data and loads into account onStart\r\nconst loadUser = async () => {\r\n  const response = await fetch(\r\n    url\r\n  );\r\n  const data = await response.json();\r\n  console.log(\"User loaded.\")\r\n  console.log(data);\r\n  getPurchases(data);\r\n}\r\n\r\n// gets data, empties account, loads data into account\r\nconst updateUser = async () => {\r\n  const response = await fetch(\r\n    url\r\n  );\r\n  const data = await response.json();\r\n  console.log(\"User updated.\")\r\n  console.log(data);\r\n  user1.purchases = [];\r\n  getPurchases(data);\r\n}\r\n\r\nconst getPurchases = (data) => {\r\n  var item;\r\n  for (let i = 0; i < data.length; i++) {\r\n    item = data[i];\r\n    var purchase = new Purchase(item.name, item.price, item.category, parseJSON(item.date), item.repetition);\r\n    user1.purchases.push(purchase);\r\n  }\r\n  console.log(user1)\r\n}\r\n\r\nconst addPurchase = async (purchase) => {\r\n    axios.post(url, purchase)\r\n      .then(response => {\r\n        console.log(response)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n}\r\n\r\nconst deletePurchase = async (itemId) => {\r\n  axios.delete(\r\n    `http://localhost:5000/purchases/delete/${itemId}`\r\n   )\r\n  console.log(\"Purchase deleted.\")\r\n  }\r\n\r\nconst updatePurchase = async (itemId, repetition) => {\r\n  axios.put(\r\n    `http://localhost:5000/purchases/update/${repetition}/${itemId}`\r\n  )\r\n  console.log(\"Purchase updated.\")\r\n}\r\n\r\nexport { loadUser, updateUser, addPurchase, deletePurchase, updatePurchase }\r\n","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Chart.js",["64"],"import React, {Component} from 'react';\r\nimport { Line,Bar,Pie } from 'react-chartjs-2';\r\n\r\nclass LineChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dailyCosts: props.dailyCosts\r\n        }\r\n    }\r\n    render () {\r\n\r\n        return(\r\n            <div>\r\n                <Line\r\n                data={{\r\n                    labels: ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n                    datasets: [{\r\n                        label: 'Amount of Weekly Budget Remaining',\r\n                        data: this.props.dailyCosts,\r\n                        backgroundColor: [\r\n                            'rgba(175, 238, 238, .5)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(0, 0, 0, .5)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {230}\r\n                width = {500}\r\n                options = {{\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass BarChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dailyCosts: props.dailyCosts\r\n        }\r\n    }\r\n    render () {\r\n\r\n        return(\r\n            <div>\r\n                <Bar\r\n                data={{\r\n                    labels: this.props.categoryLabels,\r\n                    datasets: [{\r\n                        label: 'Price Category Distribution',\r\n                        data: this.props.dailyCosts,\r\n                        backgroundColor: [\r\n                            'rgba(175, 238, 238, .5)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(0, 0, 0, .5)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                }}\r\n                height = {230}\r\n                width = {500}\r\n                options = {{\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    }\r\n                }}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport {LineChart,BarChart};","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\Calendar.js",["65","66","67","68"],"import React, { Component } from 'react';\r\nimport './Calendar.css';\r\nimport { user1, Purchase } from './store.js';\r\nimport { startOfWeek, format, addDays, isEqual } from 'date-fns'\r\nimport CalendarItem from './CalendarItem';\r\nimport \"./Figma.css\"\r\n\r\n// const removePurchase = (purchase,account) => {\r\n//   console.log(purchase);\r\n//   for (let i = 0; i < account.props.purchases.length; i++) {\r\n//     if (objectsAreEqual(account.props.purchases[i],purchase)) {\r\n//       account.state.purchases.splice(i);\r\n//     }\r\n//   }\r\n//   console.log(account);\r\n// }\r\n\r\n\r\nconst returnPurchaseInfo = (account, date) => {\r\n  let purchases = [];\r\n  for (const purchase of account.purchases) {\r\n\r\n    if (purchase.repetition.includes(format(date, 'EEEEEE')) || isEqual(purchase.day, date)) {\r\n      purchases.push(<CalendarItem onRemove={this.handleRemove} purchase={purchase} account={account} date={date} />)\r\n\r\n    }\r\n  }\r\n  return purchases\r\n}\r\n\r\n\r\nconst objectsAreEqual = (obj1, obj2) => {\r\n  const keys2 = Object.keys(obj2);\r\n  for (let key of keys2) {\r\n    if (!obj1[key] || obj1[key] !== obj2[key]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nclass Calendar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      startDate: props.startDate,\r\n\r\n    }\r\n  }\r\n    handleRemove(purchase,date) {\r\n      console.log(purchase)\r\n      for (let i = 0; i < this.props.account.purchases.length; i++) {\r\n        if (objectsAreEqual(purchase,this.props.account.purchases[i])) {\r\n          if (purchase.repetition.length > 0) {\r\n            for (let j = 0; j < purchase.repetition.length; j++) {\r\n              if (format(date,\"EEEEEE\")===purchase.repetition[j]) {\r\n                this.props.account.purchases[i].repetition.splice(j,1);\r\n              }\r\n            }\r\n          }\r\n\r\n\r\n          else {\r\n            console.log(this.props.account.purchases[i]);\r\n            this.props.account.purchases.splice(i,1);\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n      console.log(purchase.name+purchase.repetition.join());\r\n      this.props.onChange(this.props.account);\r\n\r\n    }\r\n    returnPurchaseInfo(account,date) {\r\n      let purchases = [];\r\n\r\n      for (const purchase of account.purchases) {\r\n\r\n        if (purchase.repetition.includes(format(date, 'EEEEEE')) || isEqual(purchase.day, date)) {\r\n          purchases.push(<CalendarItem key={purchase.name+purchase.repetition.join()} onRemove={this.handleRemove.bind(this,purchase,date)} purchase={purchase} account={account} date={date} />)\r\n\r\n        }\r\n      }\r\n      return purchases;\r\n    }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div class=\"weekly-calendar\">\r\n        <div id=\"sun-header-box\"></div>\r\n        <span id=\"sun-header\">Su {format(addDays(this.props.startDate, 0), ' M/d')}</span>\r\n        <div id=\"sun-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 0))}\r\n        </div>\r\n\r\n        <div id=\"mon-header-box\"></div>\r\n        <span id=\"mon-header\">Mo {format(addDays(this.props.startDate, 1), ' M/d')}</span>\r\n        <div id=\"mon-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 1))}\r\n        </div>\r\n\r\n        <div id=\"tues-header-box\"></div>\r\n        <span id=\"tues-header\">Tu {format(addDays(this.props.startDate, 2), ' M/d')}</span>\r\n        <div id=\"tues-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 2))}\r\n        </div>\r\n\r\n        <div id=\"wed-header-box\"></div>\r\n        <span id=\"wed-header\">\r\n          We {format(addDays(this.props.startDate, 3), ' M/d')}\r\n        </span>\r\n        <div id=\"wed-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 3))}\r\n        </div>\r\n\r\n\r\n        <div id=\"thurs-header-box\"></div>\r\n        <span id=\"thurs-header\">Th {format(addDays(this.props.startDate, 4), ' M/d')}</span>\r\n        <div id=\"thurs-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 4))}\r\n        </div>\r\n\r\n        <div id=\"fri-header-box\"></div>\r\n        <span id=\"fri-header\">Fr {format(addDays(this.props.startDate, 5), ' M/d')}</span>\r\n        <div id=\"fri-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 5))}\r\n        </div>\r\n\r\n        <div id=\"sat-header-box\"></div>\r\n        <span id=\"sat-header\">Sa {format(addDays(this.props.startDate, 6), ' M/d')}</span>\r\n        <div id=\"sat-box\">\r\n          {this.returnPurchaseInfo(this.props.account, addDays(this.props.startDate, 6))}\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {/* <div class=\"date\">\r\n          Sunday {format(this.props.startDate, ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 0), user1, this.props.startDate)}\r\n\r\n        </div>\r\n        <div class=\"date\">\r\n          Monday {format(addDays(this.props.startDate, 1), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 1), user1, addDays(this.props.startDate, 1))}\r\n\r\n        </div>\r\n        <div class=\"date\">\r\n          Tuesday {format(addDays(this.props.startDate, 2), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 2), user1, addDays(this.props.startDate, 2))}\r\n\r\n        </div>\r\n        <div class=\"date\">\r\n          Wednesday {format(addDays(this.props.startDate, 3), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 3), user1, addDays(this.props.startDate, 3))}\r\n        </div>\r\n        <div class=\"date\">\r\n          Thursday {format(addDays(this.props.startDate, 4), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 4), user1, addDays(this.props.startDate, 4))}\r\n\r\n        </div>\r\n        <div class=\"date\">\r\n          Friday {format(addDays(this.props.startDate, 5), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 5), user1, addDays(this.props.startDate, 5))}\r\n\r\n        </div>\r\n        <div class=\"date\">\r\n          Saturday {format(addDays(this.props.startDate, 6), ' M/d')}\r\n          {returnPurchaseInfo(addDays(this.props.startDate, 6), user1, addDays(this.props.startDate, 6))}\r\n\r\n        </div> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\store.js",["69","70","71","72","73","74"],"import React, {Component} from 'react';\r\nimport { startOfWeek,format,addDays,isEqual } from 'date-fns'\r\n\r\nclass Week {\r\n  constructor(dates) {\r\n    this.dates = dates;\r\n  }\r\n}\r\n\r\nclass Day {\r\n  constructor(day, purchases) {\r\n    this.day = day;\r\n    this.purchases = purchases;\r\n  }\r\n}\r\nclass Account {\r\n  constructor(purchases,weeklyBudget) {\r\n    this.purchases = purchases;\r\n    this.weeklyBudget = weeklyBudget;\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n  }\r\n}\r\n\r\nclass Purchase {\r\n  constructor(name, price, category, day, repetition) {\r\n    this.name = name;\r\n    this.price = price;\r\n    this.category = category;\r\n    this.day = day;\r\n    this.repetition = repetition;\r\n  }\r\n}\r\n\r\n//defining user1\r\nlet wed1 = new Purchase(\"Grapes\", 3, \"Food\", addDays(startOfWeek(new Date()),3), []);\r\nlet fri1 = new Purchase(\"Pizza\", 7.5, \"Food\", addDays(startOfWeek(new Date()),365), ['Mo','We','Fr']);\r\nlet wed2 = new Purchase(\"Calculator\", 20, \"School\", addDays(startOfWeek(new Date()),365), [\"Mo\",\"We\"]);\r\n\r\n\r\nlet user1 = new Account([wed1,fri1,wed2],140)\r\n\r\nexport { user1, Purchase, Account };\r\n","C:\\Users\\sma51\\Desktop\\budget\\BudgetApp\\dashboard\\src\\CalendarItem.js",["75","76","77","78","79"],"import React, { Component } from 'react';\r\nimport './Calendar.css';\r\nimport { startOfWeek,format,addDays,isEqual } from 'date-fns'\r\nimport \"./Figma.css\"\r\n\r\n\r\nclass CalendarItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            purchase: props.purchase,\r\n            account: props.account,\r\n            display: true,\r\n            date: props.date\r\n        }\r\n    }\r\n    handleRemove() {\r\n      if (this.props.onRemove) {\r\n        this.props.onRemove();\r\n      }\r\n\r\n    }\r\n    render() {\r\n          return (\r\n            <div>\r\n                <li id=\"calendar-item\" class=\"purchase-item\">{this.state.purchase.name} : ${this.state.purchase.price}</li>\r\n                <button id=\"calendar-item-remove\" onClick={() => this.handleRemove()}>Remove Above</button>\r\n                <h4></h4>\r\n            </div>\r\n          )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default CalendarItem;",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":12},{"ruleId":"86","severity":1,"message":"90","line":3,"column":27,"nodeType":"88","messageId":"89","endLine":3,"endColumn":36},{"ruleId":"86","severity":1,"message":"91","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":18},{"ruleId":"86","severity":1,"message":"92","line":4,"column":20,"nodeType":"88","messageId":"89","endLine":4,"endColumn":36},{"ruleId":"86","severity":1,"message":"93","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":28},{"ruleId":"86","severity":1,"message":"94","line":11,"column":17,"nodeType":"88","messageId":"89","endLine":11,"endColumn":25},{"ruleId":"86","severity":1,"message":"95","line":11,"column":27,"nodeType":"88","messageId":"89","endLine":11,"endColumn":34},{"ruleId":"86","severity":1,"message":"96","line":12,"column":49,"nodeType":"88","messageId":"89","endLine":12,"endColumn":58},{"ruleId":"86","severity":1,"message":"97","line":13,"column":10,"nodeType":"88","messageId":"89","endLine":13,"endColumn":18},{"ruleId":"86","severity":1,"message":"98","line":13,"column":32,"nodeType":"88","messageId":"89","endLine":13,"endColumn":43},{"ruleId":"86","severity":1,"message":"99","line":13,"column":45,"nodeType":"88","messageId":"89","endLine":13,"endColumn":59},{"ruleId":"86","severity":1,"message":"100","line":114,"column":7,"nodeType":"88","messageId":"89","endLine":114,"endColumn":23},{"ruleId":"86","severity":1,"message":"101","line":130,"column":7,"nodeType":"88","messageId":"89","endLine":130,"endColumn":25},{"ruleId":"86","severity":1,"message":"102","line":146,"column":5,"nodeType":"88","messageId":"89","endLine":146,"endColumn":20},{"ruleId":"86","severity":1,"message":"103","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"95","line":3,"column":27,"nodeType":"88","messageId":"89","endLine":3,"endColumn":34},{"ruleId":"86","severity":1,"message":"104","line":2,"column":19,"nodeType":"88","messageId":"89","endLine":2,"endColumn":22},{"ruleId":"86","severity":1,"message":"105","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":3,"column":17,"nodeType":"88","messageId":"89","endLine":3,"endColumn":25},{"ruleId":"86","severity":1,"message":"106","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":21},{"ruleId":"86","severity":1,"message":"107","line":19,"column":7,"nodeType":"88","messageId":"89","endLine":19,"endColumn":25},{"ruleId":"86","severity":1,"message":"103","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":2,"column":22,"nodeType":"88","messageId":"89","endLine":2,"endColumn":28},{"ruleId":"86","severity":1,"message":"109","line":2,"column":37,"nodeType":"88","messageId":"89","endLine":2,"endColumn":44},{"ruleId":"86","severity":1,"message":"110","line":4,"column":7,"nodeType":"88","messageId":"89","endLine":4,"endColumn":11},{"ruleId":"86","severity":1,"message":"111","line":10,"column":7,"nodeType":"88","messageId":"89","endLine":10,"endColumn":10},{"ruleId":"86","severity":1,"message":"106","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":21},{"ruleId":"86","severity":1,"message":"108","line":3,"column":22,"nodeType":"88","messageId":"89","endLine":3,"endColumn":28},{"ruleId":"86","severity":1,"message":"112","line":3,"column":29,"nodeType":"88","messageId":"89","endLine":3,"endColumn":36},{"ruleId":"86","severity":1,"message":"109","line":3,"column":37,"nodeType":"88","messageId":"89","endLine":3,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":28,"column":17,"nodeType":"115","endLine":28,"endColumn":21},{"ruleId":"82","replacedBy":"116"},{"ruleId":"84","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'DayPilot' is defined but never used.","'DayPilotCalendar' is defined but never used.","'requirePropFactory' is defined but never used.","'Purchase' is defined but never used.","'Account' is defined but never used.","'parseJSON' is defined but never used.","'loadUser' is defined but never used.","'addPurchase' is defined but never used.","'deletePurchase' is defined but never used.","'parseRepetitions' is assigned a value but never used.","'processRepetitions' is assigned a value but never used.","'examplePurchase' is assigned a value but never used.","'React' is defined but never used.","'Pie' is defined but never used.","'user1' is defined but never used.","'startOfWeek' is defined but never used.","'returnPurchaseInfo' is assigned a value but never used.","'format' is defined but never used.","'isEqual' is defined but never used.","'Week' is defined but never used.","'Day' is defined but never used.","'addDays' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["118"],["119"],"no-global-assign","no-unsafe-negation"]